@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');

/* Styling the chatbot toggle button */
.chatbot-toggler {
  position:fixed;
  right: 2rem;
  bottom: 5.6rem;
  height: 44px;
  color: black;
  border-radius: 42px;
  min-width: 95px;
  padding: 0 13px;
  justify-content: flex-start;
  cursor: pointer;
  background-color: rgb(9,199,199);
  border: none;
  font-size: 1rem;
  transition: all 0.3s ease-in-out;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
  z-index: 1;
  overflow: hidden;
}

/* Adds hover effect to the toggle button */
.chatbot-toggler:hover {
  opacity: 0.8;
  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.4); 
}

/* Styling the icon inside the toggle button */
.chatbot-toggler i {
  margin-right: 0.3rem;
}

/*Styling the whole chatbot*/
.chatbot {
  border: solid;
  margin: 0;
  padding: 0;
  font-family: "Poppins", sans-serif;
  position: fixed;
  right: 2rem;
  bottom: 5.6rem;
  width: 350px;
  background: #fff;
  border-radius: 1rem;
  overflow: hidden;
  transition: opacity 0.5s ease-in-out;
  opacity: 0;
  pointer-events: none; /*Unclickable when hidden*/

}

/*Styling the header(green background)*/
.chatbot header {
  display: flex;
  text-align: left;
  align-items: center;
  background-color: rgb(9,199,199);
}

/*Styling the h2(Chatbot) element in the header*/
.chatbot header h2{
  font-size: 1.5rem;
  margin-left: 1rem;
  color: white;
}

/*Style the div contains two buttons*/
.top-buttons {
  margin-left: auto;
}

/*Style both buttons themselves*/
.minimize-btn, .close-btn {
  font-size: 1.5rem;
  border: none;
  background-color: rgb(9,199,199);
  margin-right: 1rem;
  cursor: pointer;
  transition: background-color 0.4s ease-in-out;
  position: relative;
}

/*Add effect when hover the buttons*/
.minimize-btn:hover, .close-btn:hover {
  background-color: rgb(205, 205, 205);
}

/* Add bubble chat effect */
.minimize-btn:before, .close-btn:before {
  position: absolute;
  background-color: black;
  color: white;
  padding: 5px 10px;
  border-radius: 10px;
  font-size: 0.8rem;
  white-space: nowrap; /* Prevent text from wrapping */
  top: calc(100% + 5px); /* Position below the button */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Center horizontally */
  opacity: 0; /* Initially hidden */
  transition: opacity 0.4s ease; /* Smooth transition */
}

.minimize-btn:before {
  content: "Minimize Chat";
}

.close-btn:before {
  content: "Close";
}

/* Show bubble chat on hover */
.minimize-btn:hover:before, .close-btn:hover:before {
  opacity: 1;
 
}
/*Styling the chatbot (white area)*/
.chatbot .chatbox {
  overflow-y: auto;
  height: 520px;
}

.chatbox .greeting {
  margin-top: 1.5rem;
  display: flex;
  list-style:none;
  margin-bottom: 1rem;
  padding: 0 0 0 0.5rem;
  opacity: 0; /* Initially hide the chat */
  transition: opacity cubic-bezier(0.175, 0.885, 0.32, 1.275) ease-in-out; /* Add transition effect */
}


/*The chatbot logo*/
.chatbot-logo {
  width: 50px;
  height:50px;
  align-self:flex-end;
  border-radius: 50%;
  margin: 0 10px 10px 0;
}

/* Styling for individual chat messages */
.message {
  opacity: 0;
  animation: fadeIn 0.3s ease forwards;
}

/* Animation delays for sequential message appearance */
.delay-1 {
  animation-delay: 1s;
}

.delay-2 {
  animation-delay: 2s;
}

.delay-3 {
  animation-delay: 3s;
}

/* Defines the fadeIn animation keyframes */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}


/*The introduction paragraph*/
.paragraph p {
  display: table;
  padding: 12px 16px;
  border-radius: 10px;
  max-width: 75%;
  color: black;
  font-size: 1rem;
  background: rgb(243, 243, 243);
}

.user_choice_paragraph {
  display: table;
  padding: 12px 16px;
  border-radius: 10px;
  max-width: 70%;
  color: black;
  font-size: 1rem;
  background-color: rgb(9,199,199);
  margin-left: auto;
  margin-right: 0.3rem;
  opacity: 0; /* Initially set opacity to 0 */
  transition: opacity 0.5s ease; /* Apply transition effect */
  
}
/* Makes user choice messages appear */
.user_choice_paragraph.appear {
  opacity: 1;
}
/*Styling the response paragraph*/
.response_paragraph {
  display: table;
  padding: 12px 16px;
  border-radius: 10px;
  max-width: 70%;
  color: black;
  font-size: 1rem;
  background: rgb(243, 243, 243);
  margin-left: 1rem;
}

/* Container for the menu, positioned relative to its normal position */
.menu-cotainer {
  position: relative;
}

/* Styling for the menu itself */
.menu {
  border-top: solid lightgray;
  border-radius: 20px;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 0;
  overflow: hidden;
}

/* Styling for the list within the menu */
.menu ul {
  list-style: none;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  
 
}
/* Styling for list items representing user choices */
.user_choices li {
  margin-left:  0.5rem;
  align-items: center;
  border: none;
  border-bottom: solid lightgray;
  margin-right: 0.5rem;
  border-radius: 10px;
  padding-top: 1rem;
  margin-bottom: 0.5rem;
  transition: background-color 0.4s ease-in;
  
  
}

/* Adds a hover effect for list items */
.user_choices li:hover {
  border: solid;
  background-color:rgb(9,199,199);
}

/* Styling for buttons within user choices */
.user_choices button {

  font-size: 1.1rem;
  text-align: left;
  border: none;
  display: block;
  width: 100%;
  cursor: pointer;
  background: transparent;
  padding-left: 0.5rem;
}


/* Styling for the 'back to menu' button */
.back-to-menu-btn {
  
  padding: 12px 16px;
  
  font-size: 1rem;
  border-radius: 10px;
  overflow: hidden;
  background-color: rgb(9,199,199);
  cursor: pointer;
  width: 100%;
}
/* Animation for hiding the .menu element */
@keyframes slideDown {
  0% {
      transform: translateY(0);
  }
  100% {
      transform: translateY(100%);
      display: none; /* Ensure the element is hidden after the animation */
  }
}

/* Apply the animation to the .menu element when the .hide-outgoing class is added */
.menu.hide-menu {
  animation: slideDown 2s ease forwards;
}

/* Animation for showing the .menu element */
@keyframes slideUp {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0);
  }
}
/* Apply the animation to the .menu element when the hide-outgoing class is removed */
.menu.show-menu {

  animation: slideUp 2s ease forwards;
  
}
